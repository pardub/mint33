#!/bin/zsh -xev

# A simple, fast and user-friendly alternative to 'find' 
cargo install fd-find

# add repo to install Foliate ( ebook reader)
sudo add-apt-repository -y ppa:apandada1/foliate -y
sudo apt update -y
sudo apt install foliate -y

# Man page with colors
sudo apt install most -y

# Transmission torrents
sudo apt install transmission -y

sudo apt install jq -y

# command-line HTTP client, similar to Curl
sudo apt install httpie -y

# network scanner 
sudo apt install nmap -y

# process viewer
sudo apt install htop -y

# Disks management
sudo apt install gparted -y

# Shell script analysis tool
sudo apt install shellcheck -y

# distributed version control system
sudo apt install  git -y

# Disk Usage User-friendly, colorful output
# https://github.com/muesli/duf
sudo apt install  duf -y
cd || exit

# A simple, fast and user-friendly alternative to 'find'
sudo apt install  fd-find -y

# VOIP 
sudo apt install linphone-desktop -y

# Collection of Linux utilities
sudo apt install util-linux -y

# Zsh
sudo apt install zsh -y

# colordiff
sudo apt install colordiff -y

# Blueman is a GTK+ Bluetooth Manager 
sudo apt install blueman -y

####

# Development tools
sudo apt install build-essential -y

# Neovim 
sudo apt install neovim -y

sudo apt install  ansible -y

# TeamViewer alternative
# https://github.com/rustdesk/rustdesk

# Deduplicating backup program
sudo apt install borgbackup -y

# Simple, configuration-driven backup software for servers and workstations.
sudo apt install borgmatic -y

# Collaborative cheatsheets for console commands
#sudo apt install npm -y
#sudo npm install -g tldr

# to update tldr
#tldr -u 

# IRC client
# sudo dnf -y install weechat -y

# Tools for configuring WireGuard
sudo apt install wireguard-tools -y

# A cat(1) clone with syntax highlighting and Git integration.
sudo apt install bat -y

# A modern replacement for ls
wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg || exit
echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | sudo tee /etc/apt/sources.list.d/gierens.list || exit
sudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list || exit
sudo apt update -y 
sudo apt install eza -y || exit

# youtube -cli
sudo add-apt-repository -y ppa:tomtomtom/yt-dlp
sudo apt install yt-dlp -y

# rsync for cloud storage
sudo -v ; curl https://rclone.org/install.sh | sudo bash

# Collection of libraries and tools to process multimedia content such as audio, video, subtitles and related metadata.
####sudo apt install ffmpeg -y

# change MAC addres
#sudo apt install macchanger  -y

# Password Manager
sudo apt install pass -y

# Gui for Pass
sudo apt install qtpass -y

# Tool necessary to use wireguard on Debian
# sudo apt install openresolv -y

# Install pip3
sudo apt install python3-pip -y

# Calibre for Mint
sudo apt install libxcb-cursor0  -y
sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin


# +--------------------------+
# | Tools installed with Git |
# +--------------------------+

# +-----+
# | zfz |
# +-----+
# A command-line fuzzy finder
### SEE DEFAULT ANSWERS FOR SCRIPT INSTALL
#git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
# ~/.fzf/install
#yes | ~/.fzf/install

cd /tmp

# Check if jq is installed, exit if not
if ! command -v jq &> /dev/null; then
    echo "jq could not be found, please install it first."
    exit 1
fi

# Download the latest fzf binary for 64-bit Linux using GitHub's API
curl -s https://api.github.com/repos/junegunn/fzf/releases/latest | \
jq -r '.assets[] | select(.name | contains("linux_amd64")) | .browser_download_url' | \
xargs wget -O fzf.tar.gz || { echo 'Download failed'; exit 1; }

# Check if the tarball was downloaded and then extract it
if [ -f fzf.tar.gz ]; then
    tar -xzf fzf.tar.gz
    echo "Extraction successful."
else
    echo "Failed to download fzf tarball."
    exit 1
fi

# Check if the fzf binary was extracted and make it executable
if [ -f fzf ]; then
    chmod +x fzf
    echo "Binary made executable."
else
    echo "Extraction did not create an fzf binary."
    exit 1
fi

# Move the binary to /usr/local/bin to make it available system-wide
sudo mv fzf /usr/local/bin/ && echo "fzf successfully installed to /usr/local/bin."

# +--------+
# | Vscode |
# +---------+

sudo apt-get install wget gpg -y
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
rm -f packages.microsoft.gpg
sudo apt install apt-transport-https -y
sudo apt update -y 
sudo apt install code -y


# +---------------------------------------+
# | Manual install - Intellj Idea Toolbox |
# +---------------------------------------+

cd || exit
tb_releases_url='https://data.services.jetbrains.com/products/releases?code=TBA&latest=true&type=release'
download_url=$(curl --silent $tb_releases_url | jq --raw-output '.TBA[0].downloads.linux.link')
curl --output jetbrains-toolbox.tgz --progress-bar --location $download_url
cd /opt
sudo tar -xvzf ~/jetbrains-toolbox.tgz
cd /opt/jetbrains-toolbox-*
./jetbrains-toolbox
cd || exit
rm -rf jetbrains-toolbox.tgz


# +--------+
# | Rclone |
# +---------+

# Fuse file system
sudo apt install fuse -y

sudo mkdir -p /mnt/rclone
sudo mkdir -p /mnt/rclone_unencrypted
sudo mkdir -p /mnt/Dropbox
#sudo mkdir -p /mnt/Onedrive
sudo chown $USER:$USER /mnt/rclone
sudo chown $USER:$USER /mnt/rclone_unencrypted
sudo chown $USER:$USER /mnt/Dropbox
#sudo chown $USER:$USER /mnt/Onedrive

# Firewall
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw enable

# +----------------+
# | Virtualization |
# +----------------+

sudo apt install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager  -y
sudo usermod -aG kvm $USER
sudo usermod -aG libvirt $USER

# Install OpenJdk 11
#####sudo apt install openjdk-11-jdk  -y

gpg --list-keys


# Create gpg-agent.conf file and caches the password for 1 week
sudo touch $HOME/.gnupg/gpg-agent.conf
sudo echo 'default-cache-ttl 604800'             | sudo tee -a $HOME/.gnupg/gpg-agent.conf
sudo echo 'max-cache-ttl 604800'                 | sudo tee -a $HOME/.gnupg/gpg-agent.conf

# CHANGE HOSTNAME
sudo hostnamectl set-hostname laptop

# Create Neovim config file
mkdir -p $HOME/.config/nvim/ || exit
touch init.vim $HOME/.config/nvim/ || exit



# OPENSNITCH
sudo apt install python3-pip -y
sudo mkdir -p /opt/opensnitch || exit
cd /opt/opensnitch || exit
sudo wget https://github.com/evilsocket/opensnitch/releases/download/v1.6.6/opensnitch_1.6.6-1_amd64.deb
sudo wget https://github.com/evilsocket/opensnitch/releases/download/v1.6.6/python3-opensnitch-ui_1.6.6-1_all.deb
sudo apt install -y ./opensnitch*.deb ./python3-opensnitch-ui*.deb
sudo systemctl enable --now opensnitch || exit
sudo systemctl start opensnitch || exit
cd || exit

# +------------+
# |  Ripgrep   |
# +------------+

sudo apt install ripgrep -y

 +------------------------+
# |  Battery optimization  |
# +------------------------+

sudo git clone https://github.com/AdnanHodzic/auto-cpufreq.git /opt/auto-cpufreq
cd /opt/auto-cpufreq
sudo ./auto-cpufreq-installer
sudo auto-cpufreq --install
